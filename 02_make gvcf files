#This file shows steps used to generate variant call files for an isolate
#Run in dir where reference is located
mamba activate bowtie2
# $2 = reference genome
#Map raw illumina reads of isolate to the reference; check path to fastq files before running
#make the following codes as script “bowtie2.sh” and submit the job
bowtie2 -p 32 -x $2 -1 Yr-01-09_trimmed_R1.fastq -2 Yr-01-09_trimmed_R2.fastq -S 01_Yr-01-09.sam (.gz files also work)

sbatch bowtie2.sh

squeue (check the job it from slump-out)
#Convert sam file to bam
samtools view -S -b 01_$1.sam > 02_$1.bam
#Sort bam, things such as calling variants alignments must be sorted such that the alignments occur in “genome order”. That is, ordered positionally based upon their alignment coordinates on each chromosome.
samtools sort 02_$1.bam -o 03_$1.sorted.bam
#Mark and remove duplicates from aligned BAM (duplicate reads can artificially inflate the confidence of some SNP calls)
mamba install picard

mamba create --name picard

mamba activate picard_env
#script ‘picard.sh’:
#!/bin/bash

#SBATCH --job-name=Yr-91-02_remove-duplicates
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=32
#Mark and remove duplicates from aligned BAM
#$1=isolate name job
picard MarkDuplicates --REMOVE_DUPLICATES -I 03_$1.sorted.bam -O 04_$1_removed_duplicates.bam -M 04_$1_marked_dup_metrics.txt

sbatch picard.sh
squeue

#Rename read groups (GATK sometimes wants the bam files to have extra metadata like which library the data comes from)
Script ‘picard_rename.sh’:
#!/bin/bash

#SBATCH --job-name=Yr-91-02_rename
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=32
#Rename read groups (GATK sometimes wants the bam files to have extra metadata like which library the data comes from)
#$1=isolate name $2=sample name

picard AddOrReplaceReadGroups -I 04_$1_removed_duplicates.bam -O 05_$1_readsgrouped.bam -RGID 4 -RGLB lib1 -RGPL illumina -RGPU unit1 -RGSM $2

sbatch picard_rename.sh

squeue

mamba activate samtools

samtools index 05_$1_readsgrouped.bam
output files look like:  05_$1_readsgrouped.bam.bai
#Use HaplotypeCaller to genereate VariantCallFile for isolate
Script ‘haplotypecaller_vcf.sh’:
#!/bin/bash

#SBATCH --job-name=Yr-91-02_HaplotypeCaller
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=32

#Use HaplotypeCaller to genereate VariantCallFile for isolate
gatk --java-options "-Xmx4g" HaplotypeCaller --reference pst130_full.fna --sample-ploidy 2 --input 05_Yr-91-02_readsgrouped.bam --output Yr-91-02.g.vcf.gz --emit-ref-confidence GVCF

sbatch haplotypecaller_vcf.sh

squeue

#organize
mkdir $1
mkdir gvcf
cp $1.g.vcf.gz gvcf/
mv $1.g.vcf.gz $1/
mv *$1* $1/ 
